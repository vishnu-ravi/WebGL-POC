
<!DOCTYPE html>
<html lang="en">
	<head>
		<title>WebGl POC</title>
        <link href="/style/index.css" type="text/css" rel="stylesheet" />
		<meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1">
	</head>
	<body>
	    <div class="controlBox">
	      <a href="#" id="btn_clear" disabled="true">Clear</a>
	      <a href="#" id="btn_undo" disabled="true">Undo</a>
	      <button id="btn_submit" disabled="true">Submit</button>
	    </div>
			<div id="container"></div>
	    <div id="result_container" style="display:none;">
	      <p>Your Result</p>
	    </div>
		<script type="text/javascript" src="/javascript/lib/hammer.min.js"></script>
	    <script type="text/javascript" src="/javascript/lib/three.min.js"></script>
	    <script type="text/javascript" src="/javascript/lib/RequestAnimationFrame.js"></script>
	    <script type="text/javascript" src="/javascript/lib/Detector.js"></script>
	    <script type="text/javascript" src="/javascript/lib/PatchSphereGeometry.js"></script>
	    <script type="text/javascript" src="/javascript/lib/Tween.js"></script>
	    <script type="text/javascript" src="/javascript/globe.js"></script>
	    <script type="text/javascript" src="//maps.googleapis.com/maps/api/js?sensor=false"></script>
	    <script>
			alert(window.WebGLRenderingContext);
			if( ! Detector.webgl) {
				Detector.addGetWebGLMessage();
			}
			else {
				var mapZoom		=	3;
				var mapCanvas	=	document.createElement('canvas');
				var mapCtx		=	mapCanvas.getContext('2d');

				var geocoder;
				geocoder		=	new google.maps.Geocoder();
				var tilesToLoad, tilesLoaded	=	0;

				var container	=	document.getElementById('container');
				var globe		=	new DAT.Globe(container);

				var i, tweens	=	[];

				TWEEN.start();

				var tilesX		=	Math.pow( 2, mapZoom );
				var tilesY		=	Math.pow( 2, mapZoom );
				mapCanvas.width		=	256 * tilesX;
				mapCanvas.height	=	256 * tilesY;
				mapCtx.fillStyle	=	'#000';
				mapCtx.fillRect( 0, 0, mapCanvas.width, mapCanvas.height );

				tilesToLoad		=	tilesX * tilesY;
				for( var y = 0; y < tilesY; y++ ) {
					for( var x = 0; x < tilesX; x++ ) {
						fetchTile( x, y, mapZoom );
					}
				}
			}

			function fetchTile( x, y, z ) {
				var currentGoogleMapsVersion	=	201;
				var url	=	'//khm1.google.com/kh/v=' + currentGoogleMapsVersion + '&x=' + x + '&y=' + y + '&z=' + z + '&s=Gali&' + Date.now();
				var img	=	new Image();
				img.crossOrigin	=	'anonymous';
				img.onload		=	function(){ composeBaseTile( x, y, z, img ); };
				img.src	=	url;
			}

			function composeBaseTile( x, y, z, img ) {
				mapCtx.drawImage( img, x * 256, y * 256, 256, 256 );

				/*var c = mapCtx;
				c.strokeStyle = 'rgb( 255, 0, 255 )';
				c.lineWidth = 5;
				c.beginPath();
				c.moveTo( x * 256, y * 256 );
				c.lineTo( x * 256 + 256, y * 256 );
				c.lineTo( x * 256 + 256, y * 256 + 256 );
				c.lineTo( x * 256, y * 256 + 256 );
				c.lineTo( x * 256, y * 256 );
				c.stroke();*/

				globe.texture.needsUpdate	=	true;

				//weather_1cloud = just the border lines
				var url	=	'//mt1.google.com/vt/lyrs=weather_nolabels,weather_0cloud&hl=en&x=' + x + '&y=' + y + '&z=' + z + '&s=G';
				//var url = 'http://mt1.google.com/vt?lyrs=traffic|seconds_into_week:-1&hl=en&x=' + x + '&y=' + y + '&z=' + z + '&style=15';
				var img	=	new Image();
				img.crossOrigin	=	'';
				img.onload		=	function(){ composeWeatherTile( x, y, z, img ); };
				img.src	=	url;
			}

			function composeTrafficTile( x, y, z, img ) {

			}

			function composeWeatherTile( x, y, z, img ) {
				mapCtx.globalCompositeOperation	=	'source-over';
				mapCtx.drawImage( img, x * 256, y * 256, 256, 256 );
				mapCtx.globalCompositeOperation	=	'source-over';
				globe.texture.needsUpdate		=	true;
				tilesLoaded++;

				if( tilesLoaded == tilesToLoad )
				{
					document.body.style.backgroundImage	=	'none';
					start();
					addMarkers();
					bindEvents();
				}

				return;
				var url	=	'//mt1.google.com/mapslt?lyrs=weather_c_kph|invert:0&x=' + x + '&y=' + y + '&z=' + z + '&w=256&h=256&hl=en';
				var img	=	new Image();
				img.crossOrigin	=	'';
				img.onload		=	function(){ composeIconsTile( x, y, z, img ); };
				img.src	=	url;
			}

			function composeIconsTile( x, y, z, img ) {
				mapCtx.globalCompositeOperation	=	'source-over';
				mapCtx.drawImage( img, x * 256, y * 256, 256, 256 );
				mapCtx.globalCompositeOperation	=	'source-over';
				globe.texture.needsUpdate		=	true;
			}

			function start() {
				globe.animate();
			}

			function addMarkers() {
				globe.moveTo(1.3521, 103.8198);
				globe.addSprite('marker', 1.3521, 103.8198, true, 'marker_1');  //Singapore
				globe.addSprite('marker', 25.0330, 121.5654, true, 'marker_4'); //Taipei
				globe.addSprite('marker', 40.7128, -74.0059, true, 'marker_13');  //New York
			}

			function bindEvents() {
				document.getElementById('btn_clear').onclick  = function(e) {
					e.preventDefault();

					var is_disabled	=	this.getAttribute('disabled');

					if(is_disabled == true)
						return false;

					globe.clearAll();
				};

				document.getElementById('btn_undo').onclick  = function(e) {
					e.preventDefault();

					var is_disabled	=	this.getAttribute('disabled');

					if(is_disabled == true)
						return false;

					globe.undo();
				};

				document.getElementById('btn_submit').onclick   = function(e) {
					e.preventDefault();

					var is_disabled	=	this.getAttribute('disabled');

					if(is_disabled == true)
						return false;

					globe.submitRoute();
				};
			}
	    </script>
	</body>
</html>
